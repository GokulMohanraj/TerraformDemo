trigger:
  branches:
    include:
      - master

pool:
  name: Default

variables:
  AWS_ACCESS_KEY_ID: $(Access_key)
  AWS_SECRET_ACCESS_KEY: $(Secret_key)
  AWS_DEFAULT_REGION: 'ap-south-1'

stages:
  # Stage to Install Terraform
  - stage: InstallTerraform
    jobs:
      - job: InstallTerraformJob
        steps:
          - script: |
              echo "Installing Terraform"
              wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
              sudo apt update && sudo apt install terraform -y
              terraform -version  # Verify Terraform installation
            displayName: 'Install Terraform'

  # Stage to Install AWS CLI
  - stage: InstallAWSCLI
    jobs:
      - job: InstallAWSCLIJob
        steps:
          - script: |
              # Check if AWS CLI is installed
              if ! command -v aws &> /dev/null
              then
                echo "AWS CLI not found, installing it..."
                # Update the package index
                sudo apt update

                # Install dependencies
                sudo apt install unzip -y

                # Download the AWS CLI version 2 installer
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

                # Unzip the installer
                unzip awscliv2.zip

                # Run the installer
                sudo ./aws/install

                # Verify AWS CLI installation
                aws --version
              else
                echo "AWS CLI is already installed."
              fi
            displayName: 'Install AWS CLI v2 if not already installed'

  # Stage to Configure AWS CLI
  - stage: ConfigureAWSCLI
    jobs:
      - job: ConfigureAWSCLIJob
        steps:
          - script: |
              echo "Configuring AWS CLI with provided credentials"
              export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
              export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
              export AWS_DEFAULT_REGION=$(AWS_DEFAULT_REGION)

              # Run aws configure to set up credentials (non-interactive)
              aws configure set aws_access_key_id $(AWS_ACCESS_KEY_ID)
              aws configure set aws_secret_access_key $(AWS_SECRET_ACCESS_KEY)
              aws configure set region $(AWS_DEFAULT_REGION)

              # Verify AWS CLI credentials
              aws sts get-caller-identity
            displayName: 'Configure AWS CLI'

  # Stage to Initialize and Apply Terraform
  - stage: TerraformApply
    jobs:
      - job: TerraformApplyJob
        steps:
          # Terraform Init
          - script: |
              terraform init
            displayName: 'Initialize Terraform'

          # Terraform Plan
          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform Plan'

          # Terraform Apply
          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'

  # Stage to Wait (Sleep) for 5 minutes
  - stage: WaitAndDestroy
    dependsOn: TerraformApply
    jobs:
      - job: WaitAndDestroyJob
        steps:
          # Sleep for 5 minutes (300 seconds)
          - script: |
              echo "Waiting for 2 minutes before approval for destruction..."
              sleep 120  # Sleep for 2 minutes (300 seconds)
            displayName: 'Wait for 2 Minutes'
          # Initialize Terraform again to ensure the lock file is up-to-date
          - script: |
              terraform init
            displayName: 'Re-Initialize Terraform'
          # Destroy Terraform Resources
          - script: |
              terraform destroy -auto-approve
            displayName: 'Destroy Terraform Resources'
